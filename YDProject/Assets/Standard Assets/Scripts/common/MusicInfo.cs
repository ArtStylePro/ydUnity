// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Data;
using Mono.Data.Sqlite;
namespace AssemblyCSharpfirstpass
{

	public class MusicInfo
	{
		public int mID;
		public string mSongName;
		public string mSingerName;
		public int mSongLevel;
		public string mSongDuration;
		public int mLength;
		public bool mThreeKeyEnalbled;
		public bool mFourKeyEnabled;
		public int mCash;
		public int mCoin;
		public string mIconURL;
		public int mVolume;
		public string mPinYin;
		public bool mDownLoaded;
		public bool mIsAssetFile;
		public bool mPaid;

		public MusicScore mThreeKeyScore;
		public MusicScore mFourKeyScore;

		public MusicInfo ()
		{

		}
		public void parseMusicItem(IDataRecord _row)
		{
			mID = int.Parse(_row["id"].ToString());
			
			mSongName = _row["name"].ToString();
			mSingerName = _row["singer"].ToString();
			mSongDuration = _row["duration"].ToString();

			mCoin = int.Parse(_row["coin"].ToString());
			mCash = int.Parse(_row["cash"].ToString());
			mSongLevel = int.Parse(_row["level"].ToString());
			mIconURL = _row["icon_url"].ToString();
			mVolume = int.Parse(_row["volume"].ToString());
			mPinYin = _row["pinyin"].ToString();
			mThreeKeyEnalbled = _row["three_key"].ToString() == "1";
			mFourKeyEnabled = _row["four_key"].ToString() == "1";
			mThreeKeyScore = MusicScore.parseData(_row["three_key_score"].ToString());
			mFourKeyScore = MusicScore.parseData(_row["four_key_score"].ToString());

			
//			mThreeScoreLevel = int.Parse(_row["three_key_level"].ToString());
//			mFourScoreLevel = int.Parse(_row["four_key_level"].ToString());
//			
//			mThreeBedge = _row["three_key_bedge"].ToString();
//			mFourBedge = _row["four_key_bedge"].ToString();
			
			mDownLoaded = int.Parse(_row["downloaded"].ToString()) == 1;
			mIsAssetFile = int.Parse(_row["asset"].ToString()) == 1;
			
			mPaid = int.Parse(_row["buy"].ToString()) == 1;
			
			Debug.Log("parseMusicItem:" + mID);
			updateData();
			
		
		}
		private void updateData()
		{
			string[] time_info = mSongDuration.Split(':');
			if(time_info.Length != 2)
			{
				Debug.LogWarning("wrong music time format:" + mSongDuration);
				return;
			}
			int minutes = int.Parse(time_info[0]);
			int seconds = int.Parse(time_info[1]);
			mLength = minutes * 60 + seconds;
		}

	}

}

