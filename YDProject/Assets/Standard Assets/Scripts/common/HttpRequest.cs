// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Net;
using System.IO;
using System.Text;
using UnityEngine;


namespace AssemblyCSharpfirstpass
{
	public class HttpRequest
	{
		private string mServer;
		private string mURL;
		private bool mBPost;
		private int mEventID;
		private Hashtable mHeaders = new Hashtable();
		private SortedList mParamList = new SortedList();

		private WebRequest mWebRequest;
		private HttpWebResponse mWebResponse;

		private DataService mMainService;

		public HttpRequest(DataService _service)
		{
			mMainService = _service;
		}



		public int eventID
		{
			get
			{
				return mEventID;
			}
			set
			{
				mEventID = value;
			}
		}
		public string url
		{
			get { 
				return mURL;
			}
			set { 
				mURL = value;
			}
		}
		public string server
		{
			get 
			{
				return mServer;
			}
			set
			{
				mServer = value;
			}
		}
	
		public bool  isPost
		{
			get
			{
				return  mBPost;
			}
			set
			{
				mBPost = value;
			}
		}
	
		public void addParams(string _key,string _value)
		{
			mParamList.Add(_key,_value);
		}
		public void addHeader(string _key,string _value )
		{
			mHeaders.Add(_key,_value);
		}
		public IEnumerator startRequest()
		{

			string signature =  URLEncryption.encryptURL(mURL,mParamList);
			string content = null;
			WWWForm form = null;
			if(mBPost == true)
			{
				form = new WWWForm();
				foreach(KeyValuePair<string,string> kvp in mParamList)
				{
					form.AddField(kvp.Key,kvp.Value);
				}
				form.headers.Add("X-TAPTAP-SIGNATURE",signature);
			}
			else
			{

				int i = 0 ;
				foreach(KeyValuePair<string,string> kvp in mParamList)
				{
					if(i++ == 0)
						mURL += "?";
					else
						mURL += "&";
					mURL += kvp.Key + "=" + kvp.Value;
				}
				mWebRequest = WebRequest.Create(mServer + mURL);
				mHeaders.Add("X-TAPTAP-SIGNATURE",signature);
			}
			Debug.Log ("request:" + (mServer + mURL));
			WWW request = mBPost?new WWW(mServer + mURL,form):new WWW(mServer + mURL,null,mHeaders);

			yield return request;
			bool ret = false;
			if(request.error != null)
			{
				Debug.LogWarning("open url:" + mURL + " failed:" + request.error);

			}
			else
			{
				ret = true;
				Debug.Log ("text:" + request.text);
			}
			mMainService.onMissionFinished(mEventID,ret,request);
//			mWebResponse = (HttpWebResponse)mWebRequest.GetResponse();
//			if(mWebResponse.StatusCode != HttpStatusCode.OK)
//			{
//				Debug.LogWarning("can't open url:" + mURL + " error:" + mWebResponse.StatusCode);
//			}
//			else
//			{
//				Debug.Log("request " + mURL + " success:" + mWebResponse.ContentLength);
//				if(mWebResponse.ContentLength > 0)
//				{
//					byte[] buffer = new byte[16*1024];
//					Stream stream  = mWebResponse.GetResponseStream();
//					using(MemoryStream ms = new MemoryStream())
//					{
//						int read = 0;
//						while( (read = stream.Read(buffer,0,buffer.Length)) > 0 )
//						{
//							ms.Write(buffer,0,read);
//						}
//						content = Encoding.UTF8.GetString(ms.GetBuffer());
//						Debug.Log(content);
//						ms.Close();
//					}
//
//				}
//				ret = true;
//			}
//			mMainService.onMissionFinished(mEventID,ret,content);
//
//				
		}
	}
}

